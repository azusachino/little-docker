apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  type: NodePort
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      nodePort: 30090
  selector:
    app: prometheus
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.29.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9090
          securityContext:
            runAsUser: 65534
            privileged: true

          command:
            - "/bin/prometheus"
          args:
            - "--config.file=/etc/prometheus/prometheus.yml" # config file location (inside container)
            - "--web.enable-lifecycle" # enable config reload
            - "--storage.tsdb.path=/prometheus" # data location
            - "--storage.tsdb.retention.time=10d"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
          resources:
            requests:
              cpu: 2000m
              memory: 1024Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          readinessProbe:
            httpGet:
              port: 9090
              path: /-/ready
            initialDelaySeconds: 5
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              port: 9090
              path: /-/healthy
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: data
              mountPath: /prometheus
              subPath: prometheus
            - name: config
              mountPath: /etc/prometheus
        - name: configmap-reload
          image: bitnami/configmap-reload:0.5.0
          imagePullPolicy: IfNotPresent
          args:
            - "--volume-dir=/etc/config"
            - "--webhook-url=http://localhost:9090/-/reload"
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: prometheus
        - name: config
          configMap:
            name: prometheus-config