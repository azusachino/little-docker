---
# env for kafka
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-env
  labels:
    app: kafka
data:
  # when using configmap_env_ref, the pod cannot find MY_POD_NAME which defined in env
  KAFKA_PORT_NUMBER: "9092"
  KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper" # zk service name
  KAFKA_CFG_LISTENERS: "PLAINTEXT://:$(KAFKA_PORT_NUMBER)"
  KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://$(MY_POD_NAME).kafka-headless:$(KAFKA_PORT_NUMBER)"
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
  KAFKA_CFG_LOGS_DIRS: "/opt/bitnami/kafka/data"
  JMX_PORT: "9988"
---
#部署 Service Headless，用于Kafka间相互通信
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  labels:
    app: kafka
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: kafka
      port: 9092
      targetPort: kafka
  selector:
    app: kafka
---
#部署 Service，用于外部访问 Kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    app: kafka
spec:
  type: ClusterIP
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 9092
      targetPort: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: kafka
      labels:
        app: kafka
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:2.8.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-data
          # order problem, MY_POD_NAME will not take effect in pod (read env first, then envFrom)
          #          envFrom:
          #            - configMapRef:
          #                name: kafka-env
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper"                 #Zookeeper Service 名称
            - name: KAFKA_PORT_NUMBER
              value: "9092"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:$(KAFKA_PORT_NUMBER)"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://$(MY_POD_NAME).kafka-headless:$(KAFKA_PORT_NUMBER)'
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms256m -Xmx512m"
            - name: KAFKA_CFG_LOGS_DIRS
              value: /opt/bitnami/kafka/data
            - name: JMX_PORT
              value: "9988"
          ports:
            - name: kafka
              containerPort: 9092
          livenessProbe:
            tcpSocket:
              port: kafka
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            tcpSocket:
              port: kafka
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 512Mi